using System;
using Orchard.ContentManagement.Drivers;
using Hazza.Blogging.Models;
using Orchard.ContentManagement.Handlers;
using Orchard.Environment.Extensions;

// This code was generated by Orchardizer

namespace Hazza.Blogging.Drivers {
    [OrchardFeature("Hazza.Blogging.ContainerCommentCount")]
    public class ContainerCommentsCountPartDriver : ContentPartDriver<ContainerCommentsCountPart> {
        protected override string Prefix {
            get { return "ContainerCommentsCountPart"; }
        }

        protected override DriverResult Display(ContainerCommentsCountPart part, string displayType, dynamic shapeHelper) {
            // Put all your driver logic inside this method so that if your part is not being displayed no logic is run. Yay efficiency
            return ContentShape("Parts_ContainerCommentsCountPart",
                () => {
                    return shapeHelper.Parts_ContainerCommentsCountPart(Model: part);
                });
        }

        protected override void Importing(ContainerCommentsCountPart part, ImportContentContext context) {
            var partName = part.PartDefinition.Name;
            var _Count = context.Attribute(partName, "Count");
            if (_Count != null) {
                part.Count = Convert.ToInt32(_Count);
            }
        }

        protected override void Exporting(ContainerCommentsCountPart part, ExportContentContext context) {
            context.Element(part.PartDefinition.Name).SetAttributeValue("Count", part.Count);
        }
    }
}